{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///webpack/bootstrap 85c6300de638d1ab7384","webpack:///./src/flattenizer.js"],"names":["flatten","obj","Object","keys","reduce","acc","value","flatObject","subKey","unflatten","unflattened","prop","flattened","hasOwnProperty","explodeProperty","currUnflattened","flattenedObj","split","lastKeyIndex","length","idx","currKey","nextKeyVal","parseInt","isNaN"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,O;ACVA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA,mDAA2C,cAAc;;AAEzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAK;AACL;AACA;;AAEA;AACA;AACA;AACA,mCAA2B,0BAA0B,EAAE;AACvD,yCAAiC,eAAe;AAChD;AACA;AACA;;AAEA;AACA,8DAAsD,+DAA+D;;AAErH;AACA;;AAEA;AACA;;;;;;;;;;;;;;;;AChEA;;;;;;AAMO,IAAMA,4BAAU,SAAVA,OAAU,CAACC,GAAD,EAAS;AAC5B,QAAG,OAAOA,GAAP,KAAe,WAAlB,EACI,OAAO,EAAP;;AAEJ,WAAOC,OAAOC,IAAP,CAAYF,GAAZ,EAAiBG,MAAjB,CAAwB,UAACC,GAAD,EAAMC,KAAN,EAAgB;AAC3C,YAAI,QAAOL,IAAIK,KAAJ,CAAP,MAAsB,QAA1B,EAAoC;AAChC,gBAAIC,aAAaP,QAAQC,IAAIK,KAAJ,CAAR,CAAjB;AACA,iBAAK,IAAIE,MAAT,IAAmBD,UAAnB,EAA+B;AAC3B;AACAF,oBAAIC,QAAQ,GAAR,GAAcE,MAAlB,IAA4BD,WAAWC,MAAX,CAA5B;AACH;AACJ,SAND,MAOK;AACDH,gBAAIC,KAAJ,IAAaL,IAAIK,KAAJ,CAAb;AACH;;AAED,eAAOD,GAAP;AACH,KAbM,EAaJ,EAbI,CAAP;AAcH,CAlBM;;AAoBP;;;;;;AAMO,IAAMI,gCAAY,SAAZA,SAAY,YAAa;AAClC,QAAIC,cAAc,EAAlB;;AAEA,SAAK,IAAIC,IAAT,IAAiBC,SAAjB,EAA4B;AACxB,YAAIA,UAAUC,cAAV,CAAyBF,IAAzB,CAAJ,EAAoC;AAChCG,4BAAgBJ,WAAhB,EAA6BC,IAA7B,EAAmCC,SAAnC;AACH;AACJ;;AAED,WAAOF,WAAP;AACH,CAVM;;AAYP;;;;;;;AAOA,IAAMI,kBAAkB,SAAlBA,eAAkB,CAACC,eAAD,EAAkBJ,IAAlB,EAAwBK,YAAxB,EAAyC;AAC7D,QAAIb,OAAOQ,KAAKM,KAAL,CAAW,GAAX,CAAX;AACA,QAAIX,QAAQU,aAAaL,IAAb,CAAZ;AACA,QAAIO,eAAef,KAAKgB,MAAL,GAAc,CAAjC;;AAEA,SAAK,IAAIC,MAAM,CAAf,EAAkBA,MAAMF,YAAxB,EAAsCE,KAAtC,EAA6C;AACzC,YAAIC,UAAUlB,KAAKiB,GAAL,CAAd;;AAEA,YAAI,EAAEC,WAAWN,eAAb,CAAJ,EAAmC;AAC/B,gBAAIO,aAAaC,SAASpB,KAAKiB,MAAM,CAAX,CAAT,EAAwB,EAAxB,CAAjB;AACAL,4BAAgBM,OAAhB,IAA2BG,MAAMF,UAAN,IAAoB,EAApB,GAAyB,EAApD;AACH;;AAEDP,0BAAkBA,gBAAgBM,OAAhB,CAAlB;AACH;;AAEDN,oBAAgBZ,KAAKe,YAAL,CAAhB,IAAsCZ,KAAtC;AACH,CAjBD;;kBAmBe,EAACN,gBAAD,EAAUS,oBAAV,E","file":"flattenizer.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"flattenizer\"] = factory();\n\telse\n\t\troot[\"flattenizer\"] = factory();\n})(this, function() {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// identity function for calling harmony imports with the correct context\n \t__webpack_require__.i = function(value) { return value; };\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 85c6300de638d1ab7384","/**\n * Flattens an object\n *\n * @param {Object} obj - the object to unflatten\n * @returns {Object} - the flattened object, empty if provided object is undefined\n */\nexport const flatten = (obj) => {\n    if(typeof obj === 'undefined')\n        return {};\n\n    return Object.keys(obj).reduce((acc, value) => {\n        if (typeof obj[value] === 'object') {\n            let flatObject = flatten(obj[value]);\n            for (let subKey in flatObject) {\n                // append to create new key value and assign it's value\n                acc[value + '.' + subKey] = flatObject[subKey];\n            }\n        }\n        else {\n            acc[value] = obj[value];\n        }\n\n        return acc;\n    }, {});\n};\n\n/**\n * Unflattens an object with compressed keys.\n *\n * @param {Object} flattened - object to unflatten\n * @returns {Object} - the unflattened object, empty if provided object is undefined\n */\nexport const unflatten = flattened => {\n    let unflattened = {};\n\n    for (let prop in flattened) {\n        if (flattened.hasOwnProperty(prop)) {\n            explodeProperty(unflattened, prop, flattened);\n        }\n    }\n\n    return unflattened;\n};\n\n/**\n * Explodes a flattened object key.\n *\n * @param {Object} currUnflattened the current unflattened object\n * @param {String} prop the current property to explode\n * @param {Object} flattenedObj the current flattened object\n */\nconst explodeProperty = (currUnflattened, prop, flattenedObj) => {\n    let keys = prop.split('.');\n    let value = flattenedObj[prop];\n    let lastKeyIndex = keys.length - 1;\n\n    for (let idx = 0; idx < lastKeyIndex; idx++) {\n        let currKey = keys[idx];\n\n        if (!(currKey in currUnflattened)) {\n            let nextKeyVal = parseInt(keys[idx + 1], 10);\n            currUnflattened[currKey] = isNaN(nextKeyVal) ? {} : [];\n        }\n\n        currUnflattened = currUnflattened[currKey];\n    }\n\n    currUnflattened[keys[lastKeyIndex]] = value;\n};\n\nexport default {flatten, unflatten}\n\n\n// WEBPACK FOOTER //\n// ./src/flattenizer.js"],"sourceRoot":""}