{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///webpack/bootstrap 93d0939ec7b3df4ab668","webpack:///./src/flattenizer.js"],"names":["flatten","unflattened","delimiter","TypeError","flattened","Object","entries","forEach","key","value","flatObject","subKey","unflatten","keys","explodeProperty","currUnflattened","flattenedObj","split","lastKeyIndex","length","idx","currKey","nextKeyVal","hasOwnProperty","parseInt","isNaN"],"mappings":"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","file":"flattenizer.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"flattenizer\"] = factory();\n\telse\n\t\troot[\"flattenizer\"] = factory();\n})(typeof self !== 'undefined' ? self : this, function() {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 93d0939ec7b3df4ab668","/**\n * Module to flatten and unflatten objects.\n *\n * @module Flattenizer\n */\n\n/**\n * Flattens an object\n *\n * @memberOf module:Flattenizer\n * @function\n * @param {Object} unflattened     - the object to flatten\n * @param {String} [delimiter='.'] - the delimiter to be used when flattening the object\n * @returns {Object}               - the flattened object, empty if provided object is undefined\n * @throws {TypeError}             - if object passed in is not an object or if the delimiter is not a string\n * @public\n */\nexport const flatten = (unflattened, delimiter = '.') => {\n  if (typeof unflattened === 'undefined' || unflattened === null) return {};\n\n  if (typeof unflattened !== 'object') {\n    throw new TypeError('unflattened is not an object');\n  }\n\n  if (typeof delimiter !== 'string') {\n    throw new TypeError('delimiter must be a string');\n  }\n\n  let flattened = {};\n\n  Object.entries(unflattened).forEach(([key, value]) => {\n    if (typeof value === 'object' && value !== null) {\n      let flatObject = flatten(value, delimiter);\n      for (let subKey in flatObject) {\n        // append to create new key value and assign it's value\n        flattened[`${key}${delimiter}${subKey}`] = flatObject[subKey];\n      }\n    } else {\n      flattened[key] = value;\n    }\n  });\n\n  return flattened;\n};\n\n/**\n * Unflattens an object with compressed keys.\n *\n * @memberOf module:Flattenizer\n * @function\n * @param {Object} flattened       - object to unflatten\n * @param {String} [delimiter='.'] - the delimiter to be used when unflattening the object\n * @returns {Object}               - the unflattened object, empty if provided object is undefined\n * @throws {TypeError}             - if object passed in is not an object or if the delimiter is not a string\n * @public\n */\nexport const unflatten = (flattened, delimiter = '.') => {\n  if (typeof flattened === 'undefined') return {};\n\n  if (typeof flattened !== 'object') {\n    throw new TypeError('flattened is not an object');\n  }\n\n  if (typeof delimiter !== 'string') {\n    throw new TypeError('delimiter must be a string');\n  }\n\n  let unflattened = {};\n\n  Object.keys(flattened).forEach(key => {\n    explodeProperty(unflattened, key, flattened, delimiter);\n  });\n\n  return unflattened;\n};\n\n/**\n * Explodes a flattened object key.\n *\n * @function\n * @param {Object} currUnflattened - the current unflattened object\n * @param {String} key             - the current property to explode\n * @param {Object} flattenedObj    - the current flattened object\n * @param {String} delimiter       - the delimiter to be used when unflattening the object\n * @private\n */\nconst explodeProperty = (currUnflattened, key, flattenedObj, delimiter) => {\n  const keys = key.split(delimiter);\n  const value = flattenedObj[key];\n  const lastKeyIndex = keys.length - 1;\n\n  for (let idx = 0; idx < lastKeyIndex; idx++) {\n    const currKey = keys[idx];\n    let nextKeyVal;\n\n    if (!currUnflattened.hasOwnProperty(currKey)) {\n      nextKeyVal = parseInt(keys[idx + 1], 10);\n      currUnflattened[currKey] = isNaN(nextKeyVal) ? {} : [];\n    }\n\n    currUnflattened = currUnflattened[currKey];\n  }\n\n  currUnflattened[keys[lastKeyIndex]] = value;\n};\n\nexport default { flatten, unflatten };\n\n\n\n// WEBPACK FOOTER //\n// ./src/flattenizer.js"],"sourceRoot":""}